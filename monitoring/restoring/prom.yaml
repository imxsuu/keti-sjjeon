apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: restoring
  namespace: restoring
rules:
- apiGroups: [""]
  resources:
  - nodes
  - services
  - endpoints
  - pods
  - nodes/stats
  - nodes/metrics
  - nodes/log
  - nodes/spec
  - nodes/proxy
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: restoring
  namespace: restoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: restoring
  namespace: restoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: restoring
subjects:
- kind: ServiceAccount
  name: restoring
  namespace: restoring
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: restoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: restoring
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        command:
          - "prometheus"
          - "--config.file=/etc/prometheus/prometheus.yml"
        imagePullPolicy: Always
        ports:
        - containerPort: 9090
          protocol: TCP
        resources:
          requests:
            memory: 5Gi
          limits:
            memory: 5Gi
        volumeMounts:
        - mountPath: /etc/prometheus/prometheus.yml
          name: prometheus-configuration
          subPath: prometheus.yml
      volumes:
        - name: prometheus-configuration
          configMap:
            name: prometheus-configuration
            items:
              - key: prometheus.yml
                path: prometheus.yml
                mode: 0644
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-restore
  namespace: restoring
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9090'
  labels:
    app: prometheus
spec:
  type: NodePort
  ports:
    - port: 9090
      protocol: TCP
      targetPort: 9090
      nodePort: 31229
  selector:
    app: prometheus
---
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    app: prometheus
  name: prometheus-configuration
  namespace: restoring 
data:
  prometheus.yml: |-
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    scrape_configs:
      - job_name: "prometheus"
        static_configs:
          - targets: ["localhost:9090"]
      - job_name: 'kube-state-metrics'
        static_configs:
          - targets: ['prometheus-kube-state-metrics.prometheus.svc.cluster.local:8080']
      - job_name: 'node-exporter'
        static_configs:
          - targets: ['prometheus-prometheus-node-exporter.prometheus.svc.cluster.local:9100']
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https
      - job_name: 'kubernetes-cadvisor'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc.cluster.local:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      #- job_name: 'gpu-metrics'
        #static_configs:
         # - targets: ['dcgm-exporter.prometheus.svc.cluster.local:9400']
